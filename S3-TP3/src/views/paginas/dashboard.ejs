<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Superhéroes</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #f4f4f9;
      margin: 0;
      padding: 20px;
    }
    .header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 20px;
    }
    .header input[type="text"] {
      width: 70%;
      padding: 10px;
      border: 1px solid #ccc;
      border-radius: 5px;
    }
    .header button {
      padding: 10px 20px;
      border: none;
      background-color: #007BFF;
      color: white;
      border-radius: 5px;
      cursor: pointer;
    }
    .header button:hover {
      background-color: #0056b3;
    }
    .cards-container {
      display: flex;
      flex-wrap: wrap;
      gap: 20px;
      justify-content: center;
    }
    .card {
      background-color: #ffffff;
      border: 1px solid #ddd;
      border-radius: 8px;
      padding: 15px;
      width: 300px;
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
      position: relative;
    }
    .card h2 {
      margin: 0;
      font-size: 24px;
      color: #333;
    }
    .card p {
      margin: 8px 0;
      color: #555;
    }
    .card p strong {
      color: #000;
    }
    .card .actions {
      margin-top: 15px;
      display: flex;
      justify-content: space-between;
    }
    .card button {
      padding: 8px 15px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
    }
    .card .edit-btn {
      background-color: #ffc107;
      color: #fff;
    }
    .card .edit-btn:hover {
      background-color: #e0a800;
    }
    .card .delete-btn {
      background-color: #dc3545;
      color: #fff;
    }
    .card .delete-btn:hover {
      background-color: #c82333;
    }
  </style>
</head>
<body>
  <div class="header">
    <input type="text" id="searchBar" placeholder="Buscar superhéroe...">
    <button onclick="agregarHeroe()">Agregar Héroe</button>
  </div>
  <h1>Listado de Superhéroes</h1>
  <div class="cards-container" id="cardsContainer">
    <% superheroes.forEach(superHeroe => { %>
      <div class="card">
        <h2><%= superHeroe.nombreSuperHeroe %></h2>
        <p><strong>Nombre Real:</strong> <%= superHeroe.nombreReal %></p>
        <p><strong>Edad:</strong> <%= superHeroe.edad %> años</p>
        <p><strong>Planeta de Origen:</strong> <%= superHeroe.planetaOrigen %></p>
        <p><strong>Debilidad:</strong> <%= superHeroe.debilidad %></p>
        <p><strong>Poderes:</strong> <%= superHeroe.poderes.join(", ") %></p>
        <p><strong>Aliados:</strong> <%= superHeroe.aliados.join(", ") %></p>
        <p><strong>Enemigos:</strong> <%= superHeroe.enemigos.join(", ") %></p>
        <p><strong>Cargado por:</strong> <%= superHeroe.CargadoPor %></p>
        <div class="actions">
          <button class="edit-btn" onclick="modificarHeroe('<%= superHeroe.id %>')">Modificar</button>
          <button class="delete-btn" onclick="eliminarHeroe('<%= superHeroe.id %>')">Eliminar</button>
        </div>
      </div>
    <% }) %>
  </div>

  <script>
    // Función para buscar héroes en la barra de búsqueda
    document.getElementById('searchBar').addEventListener('input', function () {
      const filter = this.value.toLowerCase();
      const cards = document.querySelectorAll('.card');
      
      cards.forEach(card => {
        const heroName = card.querySelector('h2').innerText.toLowerCase();
        card.style.display = heroName.includes(filter) ? '' : 'none';
      });
    });

    // Función para agregar un héroe 
    function agregarHeroe() {

      window.location.href = './agregar';
    }

    // Función para modificar un héroe (deberías reemplazar con lógica real)
    function modificarHeroe(id) {
      window.location.href = `./editar/${id}`;
     // alert(`Modificar héroe con ID: ${id}`);
    }

    // Función para eliminar un héroe (deberías reemplazar con lógica real)
    function eliminarHeroe(id) {
      const confirmar = confirm(`¿Seguro que deseas eliminar el héroe con ID: ${id}?`);
      
      if (confirmar) {
        // Realizar una solicitud DELETE con fetch
        fetch(`/api/heroes/borrarPorId/${id}`, {
          method: 'DELETE',  // Método DELETE para eliminar el recurso
        })
        .then(response => {
          if (response.ok) {
            alert(`Héroe con ID ${id} eliminado`);
            // Redirigir a otra página o actualizar la UI
            window.location.href = "/api/heroes"; // o la ruta que desees
          } else {
            alert('Hubo un error al eliminar el héroe');
          }
        })
        .catch(error => {
          console.error('Error al realizar la solicitud DELETE:', error);
          alert('Hubo un problema con la solicitud');
        });
      }
    }
    
  </script>
</body>
</html>